# %% [code] {"execution":{"iopub.status.busy":"2022-12-15T15:01:27.530497Z","iopub.execute_input":"2022-12-15T15:01:27.531845Z","iopub.status.idle":"2022-12-15T15:01:27.704015Z","shell.execute_reply.started":"2022-12-15T15:01:27.531256Z","shell.execute_reply":"2022-12-15T15:01:27.702744Z"}}
# This Python 3 environment comes with many helpful analytics libraries installed
# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python
# For example, here's several helpful packages to load

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)

# Input data files are available in the read-only "../input/" directory
# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory

import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using "Save & Run All" 
# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session

# %% [code] {"execution":{"iopub.status.busy":"2022-12-15T15:01:27.706434Z","iopub.execute_input":"2022-12-15T15:01:27.707245Z","iopub.status.idle":"2022-12-15T15:01:29.011463Z","shell.execute_reply.started":"2022-12-15T15:01:27.707198Z","shell.execute_reply":"2022-12-15T15:01:29.010063Z"}}
#!pip install sklearn 
import sklearn as sk
import seaborn as sns

# %% [code] {"execution":{"iopub.status.busy":"2022-12-15T15:01:29.016766Z","iopub.execute_input":"2022-12-15T15:01:29.017207Z","iopub.status.idle":"2022-12-15T15:01:29.224568Z","shell.execute_reply.started":"2022-12-15T15:01:29.017174Z","shell.execute_reply":"2022-12-15T15:01:29.222935Z"}}
#help(sk)
from sklearn import pipeline as pl
from sklearn import linear_model as lm

# %% [code] {"execution":{"iopub.status.busy":"2022-12-15T15:01:29.228198Z","iopub.execute_input":"2022-12-15T15:01:29.228852Z","iopub.status.idle":"2022-12-15T15:01:29.315220Z","shell.execute_reply.started":"2022-12-15T15:01:29.228784Z","shell.execute_reply":"2022-12-15T15:01:29.313207Z"}}
Unemployment=pd.read_csv('/kaggle/input/world-economic-data/unemployment.csv')
Cost_of_living=pd.read_csv('/kaggle/input/cost-of-living/cost-of-living.csv')
Wealth=pd.read_csv('/kaggle/input/world-economic-data/richest_countries.csv')
Corruption =pd.read_csv('/kaggle/input/world-economic-data/corruption.csv')
Salaries=pd.read_csv('/kaggle/input/analytics-industry-salaries-2022-india/Salary Dataset.csv')
#Moms=pd.read_json('/kaggle/input/the-working-moms/__output__.json')

# %% [code] {"execution":{"iopub.status.busy":"2022-12-15T15:01:29.317600Z","iopub.execute_input":"2022-12-15T15:01:29.321232Z","iopub.status.idle":"2022-12-15T15:01:30.854936Z","shell.execute_reply.started":"2022-12-15T15:01:29.321170Z","shell.execute_reply":"2022-12-15T15:01:30.852912Z"}}
import plotly
import plotly.graph_objects as go
import plotly.express as px
#help(go.Figure)
#help(px.scatter)

# %% [code] {"execution":{"iopub.status.busy":"2022-12-15T15:01:30.857164Z","iopub.execute_input":"2022-12-15T15:01:30.857837Z","iopub.status.idle":"2022-12-15T15:01:30.886026Z","shell.execute_reply.started":"2022-12-15T15:01:30.857768Z","shell.execute_reply":"2022-12-15T15:01:30.884998Z"}}
Salaries.tail()

# %% [code] {"execution":{"iopub.status.busy":"2022-12-15T15:01:30.887417Z","iopub.execute_input":"2022-12-15T15:01:30.888013Z","iopub.status.idle":"2022-12-15T15:01:30.892661Z","shell.execute_reply.started":"2022-12-15T15:01:30.887980Z","shell.execute_reply":"2022-12-15T15:01:30.891477Z"}}
import plotly.express as px

# %% [code]


# %% [code] {"execution":{"iopub.status.busy":"2022-12-15T15:01:30.894412Z","iopub.execute_input":"2022-12-15T15:01:30.895178Z","iopub.status.idle":"2022-12-15T15:01:32.475024Z","shell.execute_reply.started":"2022-12-15T15:01:30.895141Z","shell.execute_reply":"2022-12-15T15:01:32.473635Z"}}
Wealth.dtypes
ax=px.scatter(Wealth.sort_values(by='gdp_per_capita').tail(100),x='gdp_per_capita',y='country',size='gdp_per_capita', hover_data=['country'],size_max=60)
ax

print(f"min: {Wealth['gdp_per_capita'].min()}\nMax: {Wealth['gdp_per_capita'].max()}\n {Wealth['gdp_per_capita'].max()- Wealth['gdp_per_capita'].min()}")

# %% [code] {"execution":{"iopub.status.busy":"2022-12-15T15:01:32.476731Z","iopub.execute_input":"2022-12-15T15:01:32.477833Z","iopub.status.idle":"2022-12-15T15:01:32.542058Z","shell.execute_reply.started":"2022-12-15T15:01:32.477766Z","shell.execute_reply":"2022-12-15T15:01:32.540705Z"}}
cost_of_living=Cost_of_living.transpose()
cost_of_living.columns=cost_of_living.loc['Unnamed: 0']
cost_of_living.drop('Unnamed: 0', axis=0, inplace=True)
cost_of_living=cost_of_living.astype(float)
cost_of_living['city']=list(cost_of_living.index)
cost_of_living.index=list(range(len(cost_of_living['Meal, Inexpensive Restaurant'])))
cost_of_living[['City','State', 'Country']]=cost_of_living['city'].str.split(',',2,expand=True)
reg=cost_of_living[cost_of_living['Country'].isnull()==True]
reg

# %% [code] {"execution":{"iopub.status.busy":"2022-12-15T15:01:32.547412Z","iopub.execute_input":"2022-12-15T15:01:32.548241Z","iopub.status.idle":"2022-12-15T15:01:33.094523Z","shell.execute_reply.started":"2022-12-15T15:01:32.548191Z","shell.execute_reply":"2022-12-15T15:01:33.093191Z"}}
for i in reg.index:
    cost_of_living.loc[i,'Country']=cost_of_living.loc[i,'State']
cost_of_living.drop('city', axis=1, inplace=True)
cost_of_living.set_index('City', inplace=True)
cost_of_living
high=px.scatter(cost_of_living.sort_values(by='Meal, Inexpensive Restaurant').tail(30),x='Mortgage Interest Rate in Percentages (%), Yearly, for 20 Years Fixed-Rate',size='Average Monthly Net Salary (After Tax)', size_max=35, hover_data=['Country'], color='Country')
Lows=px.scatter(cost_of_living.sort_values(by='Meal, Inexpensive Restaurant').head(10),x='Meal, Inexpensive Restaurant',size='Meal, Inexpensive Restaurant', size_max=50,hover_data=['Country'])
mve=Lows=px.scatter(cost_of_living.sort_values(by='Average Monthly Net Salary (After Tax)').tail(20),x='Meal, Inexpensive Restaurant',y='Average Monthly Net Salary (After Tax)',size='Mortgage Interest Rate in Percentages (%), Yearly, for 20 Years Fixed-Rate', size_max=50,hover_data=['Country'], color='Country')
blow=px.bar(cost_of_living.sort_values(by='Meal, Inexpensive Restaurant').tail(30),x='Meal, Inexpensive Restaurant')
high
mve
#cost_of_living.columns

# %% [code] {"execution":{"iopub.status.busy":"2022-12-15T15:01:33.096195Z","iopub.execute_input":"2022-12-15T15:01:33.096671Z","iopub.status.idle":"2022-12-15T15:01:33.108750Z","shell.execute_reply.started":"2022-12-15T15:01:33.096633Z","shell.execute_reply":"2022-12-15T15:01:33.107331Z"}}
#high 
mve
#fig2=go.Figure(data=high.data+mve.data)
#fig2



# %% [code] {"execution":{"iopub.status.busy":"2022-12-15T15:01:33.110539Z","iopub.execute_input":"2022-12-15T15:01:33.111065Z","iopub.status.idle":"2022-12-15T15:01:34.057049Z","shell.execute_reply.started":"2022-12-15T15:01:33.111018Z","shell.execute_reply":"2022-12-15T15:01:34.055886Z"}}
splot=sns.regplot(data=cost_of_living, x='Average Monthly Net Salary (After Tax)', y='Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment')
plp=px.scatter(cost_of_living, x='Average Monthly Net Salary (After Tax)', y='Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment',size='Apartment (1 bedroom) in City Centre', hover_data=['Country'], color='Country')
plp

# %% [code] {"execution":{"iopub.status.busy":"2022-12-15T15:01:34.058764Z","iopub.execute_input":"2022-12-15T15:01:34.059147Z","iopub.status.idle":"2022-12-15T15:01:34.066891Z","shell.execute_reply.started":"2022-12-15T15:01:34.059114Z","shell.execute_reply":"2022-12-15T15:01:34.065771Z"}}
cost_of_living.columns

# %% [code] {"execution":{"iopub.status.busy":"2022-12-15T15:01:34.068258Z","iopub.execute_input":"2022-12-15T15:01:34.068622Z","iopub.status.idle":"2022-12-15T15:01:34.103888Z","shell.execute_reply.started":"2022-12-15T15:01:34.068591Z","shell.execute_reply":"2022-12-15T15:01:34.102389Z"}}
figure1=go.Figure(high.data+blow.data)
figure1

# %% [code] {"execution":{"iopub.status.busy":"2022-12-15T15:01:34.105740Z","iopub.execute_input":"2022-12-15T15:01:34.106581Z","iopub.status.idle":"2022-12-15T15:01:34.123442Z","shell.execute_reply.started":"2022-12-15T15:01:34.106525Z","shell.execute_reply":"2022-12-15T15:01:34.122207Z"}}
cost_of_living.index
cost_of_living.loc['Mumbai'].to_frame()

# %% [code] {"execution":{"iopub.status.busy":"2022-12-15T15:01:34.125075Z","iopub.execute_input":"2022-12-15T15:01:34.125604Z","iopub.status.idle":"2022-12-15T15:01:34.245547Z","shell.execute_reply.started":"2022-12-15T15:01:34.125558Z","shell.execute_reply":"2022-12-15T15:01:34.244449Z"}}

fig=px.scatter(cost_of_living.sort_values(by='Average Monthly Net Salary (After Tax)').tail(30),x='Average Monthly Net Salary (After Tax)', size='Basic (Electricity, Heating, Cooling, Water, Garbage) for 85m2 Apartment' ,size_max=30,color='Country')
fig


# %% [code] {"execution":{"iopub.status.busy":"2022-12-15T15:01:34.247165Z","iopub.execute_input":"2022-12-15T15:01:34.247543Z","iopub.status.idle":"2022-12-15T15:01:34.261894Z","shell.execute_reply.started":"2022-12-15T15:01:34.247509Z","shell.execute_reply":"2022-12-15T15:01:34.260366Z"}}
Unemployment.dtypes
#help(Unemployment.sort_values)
Unemployment.sort_values('unemployment_rate').tail(10)
#stats=Unemployment['unemployment_rate'].describe()
#stats.to_frame()
#Unemployment.country
zs_sa=(Unemployment[Unemployment['country']=='South Africa']['unemployment_rate']-Unemployment['unemployment_rate'].mean())/ Unemployment['unemployment_rate'].std()
zs_sa

# %% [code] {"execution":{"iopub.status.busy":"2022-12-15T15:01:34.263533Z","iopub.execute_input":"2022-12-15T15:01:34.264041Z","iopub.status.idle":"2022-12-15T15:01:34.328101Z","shell.execute_reply.started":"2022-12-15T15:01:34.263993Z","shell.execute_reply":"2022-12-15T15:01:34.326886Z"}}
#help()
unempl=px.scatter(Unemployment.sort_values(by='unemployment_rate').tail(30), x='unemployment_rate',y='country', size='unemployment_rate')
#figure1=go.Figure(unempl.data+Lows.data)
unempl

# %% [code] {"execution":{"iopub.status.busy":"2022-12-15T15:01:34.329225Z","iopub.execute_input":"2022-12-15T15:01:34.329934Z","iopub.status.idle":"2022-12-15T15:01:34.360752Z","shell.execute_reply.started":"2022-12-15T15:01:34.329897Z","shell.execute_reply":"2022-12-15T15:01:34.359624Z"}}
cost_of_living.head()

# %% [code] {"execution":{"iopub.status.busy":"2022-12-15T15:01:34.362305Z","iopub.execute_input":"2022-12-15T15:01:34.362653Z","iopub.status.idle":"2022-12-15T15:01:34.409358Z","shell.execute_reply.started":"2022-12-15T15:01:34.362624Z","shell.execute_reply":"2022-12-15T15:01:34.408062Z"}}
cost_of_living

# %% [code]
